Структура:

Todos
    Task
        - id
        - user_id -> User
        - name
        - description
        - date

User
    Network
        - id
        - name
    User
        - id
        - email
        - name
        - token
        - date
        - network
        - ...

Задачи:
- основные
1. Поправить активные элементы меню при переходе в "глубь" пункта (меню) +

2. Добавить раздел для создания собственных задач пользователем (не админ)
    2.1 Добавление задач +
    2.2 Удаление задач +
    2.3 Редактирование задач +
    2.4 Изменение статуса задачи (выполнено/не выполнено) +
    2.1 Поправить фильтрацию в таблице задач пользователя с иконкой (как у Елисеева) +
    2.2 Реализовать вывод выполнены задач пользователя (например через кнопку) +
    2.3 Реализовать вывод удаленных задач пользователя (например через кнопку) +

3. Работа с ролями
    3.1 Управлять пользователями может только админ +
    3.2 Админ может просматривать задачи любого пользователя +
    3.3 Админ может добавлять задачи любому из пользователей +
    3.4 Редактирование админом задач пользователя +
    3.5 Админ может удалять задачи у любого пользователя. +
    3.6 Пользователь (не админ) может просматривать\создавать\редактировать\удалять\ставить отметку о выполнении ТОЛЬКО своего списка задач. +

- дополнительно
4. Написание unit-тестов
5. Защита от CSRF.
6. Загрузка файлов
6.1 - К профилю добавить возможность загрузки изображения +
6.2 - Изображение профиля хранить оригинальное и так-же разобрать реализацию генерации миниатюры изображения +
6.3 - Реализация загрузки документов к задаче
7. Разобрать создания пакетов для симфони, создание простенького пакета
8. Использование api-platform для реализации api на симфони
9. Изучение стандартов JSON-api
10. Реализация морды на vue.js (рассмотреть возможность использования react)